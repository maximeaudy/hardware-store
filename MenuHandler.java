import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

/** ********************************************************
 *  Class: The purpose of the MenuHandler class is to respond
 *         to the events generated by the menu items.
 ********************************************************/
public class MenuHandler implements ActionListener {
    HardwareStore hw_store;

    public MenuHandler(HardwareStore hw_store){
        hw_store = hw_store;
    }

    public void actionPerformed( ActionEvent e )  {
        if ( e.getSource() == hw_store.fileMenu) {
            /**The Exit menu Item was selected. */
            hw_store.cleanup();
        }
        else if ( e.getSource() == hw_store.lmMI ) {
            hw_store.sysPrint ( "The Lawn Mower menu Item was selected.\n" );

            hw_store.display( "Lawn Mowers" ) ;
        }
        else if ( e.getSource() == hw_store.lmtMI ) {
            hw_store.sysPrint ( "The Lawn Mower Tractor menu Item was selected.\n" );

            hw_store.display( "Lawn Tractor Mowers" ) ;
        }
        else if ( e.getSource() == hw_store.hdMI ) {
            hw_store.sysPrint ( "The Hand Drill Tools menu Item was selected.\n" );

            hw_store.display( "Hand Drill Tools" ) ;
        }
        else if ( e.getSource() == hw_store.dpMI ) {
            hw_store.sysPrint ("The Drill Press Power Tools menu Item was selected.\n" );

            hw_store.display( "Drill Press Power Tools" ) ;
        }
        else if ( e.getSource() == hw_store.csMI ) {
            hw_store.sysPrint ("The Circular Saws Tools menu Item was selected.\n" );

            hw_store.display( "Circular Saws" ) ;
        }
        else if ( e.getSource() == hw_store.hamMI ) {
            hw_store.sysPrint ("The Hammer menu Item was selected.\n" );

            hw_store.display( "Hammers" ) ;
        }
        else if ( e.getSource() == hw_store.tabMI ) {
            hw_store.sysPrint ("The Table Saws menu Item was selected.\n" );

            hw_store.display( "Table Saws" ) ;
        }
        else if ( e.getSource() == hw_store.bandMI ) {
            hw_store.sysPrint ("The Band Saws menu Item was selected.\n" );

            hw_store.display( "Band Saws" ) ;
        }
        else if ( e.getSource() ==  hw_store.sandMI ) {
            hw_store.sysPrint ("The Sanders menu Item was selected.\n" );

            hw_store.display( "Sanders" ) ;
        }
        else if ( e.getSource() == hw_store.stapMI ) {
            hw_store.sysPrint ("The Staplers menu Item was selected.\n" );

            hw_store.display( "Staplers" ) ;
        }
        else if ( e.getSource() == hw_store.wdvMI ) {
            hw_store.sysPrint ("The Wet-Dry Vacs menu Item was selected.\n" );
            // ListRecs BPTRecs = new ListRecs( hws , "WDV", "Wet-Dry Vacs" );
        }
        else if ( e.getSource() == hw_store.sccMI ) {
            hw_store.sysPrint ("The Storage, Chests & Cabinets menu Item was selected.\n" );
            //ListRecs BPTRecs = new ListRecs( hws , "SCC", "Storage, Chests & Cabinets" );
        }
        else if ( e.getSource() == hw_store.deleteMI ) {
            hw_store.sysPrint ("The Delete Record Dialog was made visible.\n") ;
            //DeleteRec( HardwareStore hw_store,  RandomAccessFile f,
            // JTable tab, String p_Data[] []  )
            hw_store.deleteRec = new DeleteRec( hw_store, hw_store.file, hw_store.table, hw_store.pData );
            hw_store.deleteRec.setVisible( true );
        }
        else if ( e.getSource() == hw_store.addMI ) {
            hw_store.sysPrint ("The Add menu Item was selected.\n" );
            hw_store.pWord.displayDialog( "add" ) ;
        }
        else if ( e.getSource() == hw_store.updateMI ) {
            hw_store.sysPrint ("The Update menu Item was selected.\n" );
            hw_store.update = new UpdateRec( hw_store, hw_store.file,  hw_store.pData, -1 );
            hw_store.update.setVisible( true );
        }
        else if ( e.getSource() == hw_store.listAllMI ) {
            hw_store.sysPrint ("The List All menu Item was selected.\n" );
            //listRecs.setVisible( true );
        }
        else if ( e.getSource() == hw_store.debugON ) {
            hw_store.myDebug = true ;
            hw_store.sysPrint ("Debugging for this execution is turned on.\n" );
        }
        else if ( e.getSource() == hw_store.debugOFF ) {
            hw_store.sysPrint ("Debugging for this execution is turned off.\n" );
            hw_store.myDebug = false ;
        }
        else if ( e.getSource() == hw_store.helpHWMI ) {
            hw_store.sysPrint ("The Help menu Item was selected.\n" );
            File hd = new File("HW_Tutorial.html");
            //File net = new File("Netscp.exe");
            //System.out.println( "the path for help_doc is " + hd.getAbsolutePath() );
            //System.out.println( "the path for netscape is " + net.getAbsolutePath() );

            Runtime rt = Runtime.getRuntime();
            //String[] callAndArgs = { "d:\\Program Files\\netscape\\netscape\\Netscp.exe" ,
            String[] callAndArgs = { "c:\\Program Files\\Internet Explorer\\IEXPLORE.exe" ,
                    "" + hd.getAbsolutePath() };

            try {

                Process child = rt.exec( callAndArgs );
                child.waitFor();
                hw_store.sysPrint ("Process exit code is: " +
                        child.exitValue());
            }
            catch(IOException e2) {
                hw_store.sysPrint (
                        "IOException starting process!");
            }
            catch(InterruptedException e3) {
                System.err.println(
                        "Interrupted waiting for process!");
            }
        }
        else if ( e.getSource() == hw_store.aboutHWMI ) {
            hw_store.sysPrint ("The About menu Item was selected.\n" );
            Runtime rt = Runtime.getRuntime();
            String[] callAndArgs = { "c:\\Program Files\\Internet Explorer\\IEXPLORE.exe" ,
                    "http://www.sumtotalz.com/TotalAppsWorks/ProgrammingResource.html" };
            try {
                Process child = rt.exec(callAndArgs);
                child.waitFor();
                hw_store.sysPrint ("Process exit code is: " +
                        child.exitValue());
            }
            catch(IOException e2) {
                System.err.println(
                        "IOException starting process!");
            }
            catch(InterruptedException e3) {
                System.err.println(
                        "Interrupted waiting for process!");
            }
        }
        String current = ( String ) e.getActionCommand();
    }
}